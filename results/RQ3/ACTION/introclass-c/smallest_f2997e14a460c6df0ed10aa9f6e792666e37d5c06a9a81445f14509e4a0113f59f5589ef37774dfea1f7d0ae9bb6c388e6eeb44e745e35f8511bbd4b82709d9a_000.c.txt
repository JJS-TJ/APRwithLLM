New cluster:
===
insert-node
---
if_statement [173,252]
to
compound_statement [11,583]
at 4
------------
===
insert-node
---
if_statement [173,252]
to
compound_statement [11,583]
at 4
===
insert-node
---
if: if [173,175]
to
if_statement [173,252]
at 0
===
insert-node
---
): ) [188,189]
to
parenthesized_expression [176,189]
at 2
===
insert-node
---
(: ( [176,177]
to
parenthesized_expression [176,189]
at 0
===
insert-node
---
parenthesized_expression [176,189]
to
if_statement [173,252]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [256,305]
    if: if [256,258]
    parenthesized_expression [259,276]
        (: ( [259,260]
        binary_expression [260,275]
            identifier: num3 [260,264]
            <: < [265,266]
            identifier: smallest [267,275]
        ): ) [275,276]
    compound_statement [277,305]
        {: { [277,278]
        expression_statement [284,300]
            assignment_expression [284,299]
                identifier: smallest [284,292]
                =: = [293,294]
                identifier: num3 [295,299]
            ;: ; [299,300]
        }: } [304,305]
to
compound_statement [11,583]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [309,358]
    if: if [309,311]
    parenthesized_expression [312,329]
        (: ( [312,313]
        binary_expression [313,328]
            identifier: num4 [313,317]
            <: < [318,319]
            identifier: smallest [320,328]
        ): ) [328,329]
    compound_statement [330,358]
        {: { [330,331]
        expression_statement [337,353]
            assignment_expression [337,352]
                identifier: smallest [337,345]
                =: = [346,347]
                identifier: num4 [348,352]
            ;: ; [352,353]
        }: } [357,358]
to
compound_statement [11,583]
at 6

New cluster:
MOVE from compound_statement [11,583]
------------
===
move-tree
---
expression_statement [217,254]
    call_expression [217,253]
        identifier: printf [217,223]
        argument_list [223,253]
            (: ( [223,224]
            string_literal [224,246]
                ": " [224,225]
                string_content: %d is the smallest [225,243]
                escape_sequence: \n [243,245]
                ": " [245,246]
            ,: , [246,247]
            identifier: num1 [248,252]
            ): ) [252,253]
    ;: ; [253,254]
to
compound_statement [11,583]
at 7

New cluster:
===
insert-node
---
,: , [44,45]
to
declaration [18,45]
at 8
------------
===
insert-node
---
,: , [44,45]
to
declaration [18,45]
at 8

New cluster:
===
insert-node
---
identifier: smallest [46,54]
to
declaration [18,45]
at 9
------------
===
insert-node
---
identifier: smallest [46,54]
to
declaration [18,45]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
compound_statement [190,218]
    {: { [190,191]
    expression_statement [197,213]
        assignment_expression [197,212]
            identifier: smallest [197,205]
            =: = [206,207]
            identifier: num1 [208,212]
        ;: ; [212,213]
    }: } [217,218]
to
if_statement [173,252]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
else_clause [219,252]
    else: else [219,223]
    compound_statement [224,252]
        {: { [224,225]
        expression_statement [231,247]
            assignment_expression [231,246]
                identifier: smallest [231,239]
                =: = [240,241]
                identifier: num2 [242,246]
            ;: ; [246,247]
        }: } [251,252]
to
if_statement [173,252]
at 3

New cluster:
MOVE from parenthesized_expression [176,189]
------------
===
move-tree
---
binary_expression [167,178]
    identifier: num1 [167,171]
    <: < [172,173]
    identifier: num2 [174,178]
to
parenthesized_expression [176,189]
at 1

New cluster:
UPDATE from num1 to smallest
------------
===
update-node
---
identifier: num1 [248,252]
replace num1 by smallest

New cluster:
===
delete-node
---
if_statement [163,565]
===
------------
===
delete-node
---
(: ( [166,167]
===
===
delete-node
---
{: { [210,211]
===
===
delete-node
---
if: if [163,165]
===
===
delete-node
---
): ) [208,209]
===
===
delete-node
---
parenthesized_expression [166,209]
===
===
delete-node
---
compound_statement [210,259]
===
===
delete-node
---
&&: && [194,196]
===
===
delete-node
---
binary_expression [167,208]
===
===
delete-node
---
}: } [258,259]
===
===
delete-node
---
&&: && [179,181]
===
===
delete-node
---
if_statement [163,565]
===
===
delete-node
---
binary_expression [167,193]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [182,193]
    identifier: num1 [182,186]
    <: < [187,188]
    identifier: num3 [189,193]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [197,208]
    identifier: num1 [197,201]
    <: < [202,203]
    identifier: num4 [204,208]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
else_clause [260,565]
    else: else [260,264]
    if_statement [265,565]
        if: if [265,267]
        parenthesized_expression [268,311]
            (: ( [268,269]
            binary_expression [269,310]
                binary_expression [269,295]
                    binary_expression [269,280]
                        identifier: num2 [269,273]
                        <: < [274,275]
                        identifier: num1 [276,280]
                    &&: && [281,283]
                    binary_expression [284,295]
                        identifier: num2 [284,288]
                        <: < [289,290]
                        identifier: num3 [291,295]
                &&: && [296,298]
                binary_expression [299,310]
                    identifier: num2 [299,303]
                    <: < [304,305]
                    identifier: num4 [306,310]
            ): ) [310,311]
        compound_statement [312,361]
            {: { [312,313]
            expression_statement [319,356]
                call_expression [319,355]
                    identifier: printf [319,325]
                    argument_list [325,355]
                        (: ( [325,326]
                        string_literal [326,348]
                            ": " [326,327]
                            string_content: %d is the smallest [327,345]
                            escape_sequence: \n [345,347]
                            ": " [347,348]
                        ,: , [348,349]
                        identifier: num2 [350,354]
                        ): ) [354,355]
                ;: ; [355,356]
            }: } [360,361]
        else_clause [362,565]
            else: else [362,366]
            if_statement [367,565]
                if: if [367,369]
                parenthesized_expression [370,413]
                    (: ( [370,371]
                    binary_expression [371,412]
                        binary_expression [371,397]
                            binary_expression [371,382]
                                identifier: num3 [371,375]
                                <: < [376,377]
                                identifier: num1 [378,382]
                            &&: && [383,385]
                            binary_expression [386,397]
                                identifier: num3 [386,390]
                                <: < [391,392]
                                identifier: num2 [393,397]
                        &&: && [398,400]
                        binary_expression [401,412]
                            identifier: num3 [401,405]
                            <: < [406,407]
                            identifier: num4 [408,412]
                    ): ) [412,413]
                compound_statement [414,463]
                    {: { [414,415]
                    expression_statement [421,458]
                        call_expression [421,457]
                            identifier: printf [421,427]
                            argument_list [427,457]
                                (: ( [427,428]
                                string_literal [428,450]
                                    ": " [428,429]
                                    string_content: %d is the smallest [429,447]
                                    escape_sequence: \n [447,449]
                                    ": " [449,450]
                                ,: , [450,451]
                                identifier: num3 [452,456]
                                ): ) [456,457]
                        ;: ; [457,458]
                    }: } [462,463]
                else_clause [464,565]
                    else: else [464,468]
                    if_statement [469,565]
                        if: if [469,471]
                        parenthesized_expression [472,515]
                            (: ( [472,473]
                            binary_expression [473,514]
                                binary_expression [473,499]
                                    binary_expression [473,484]
                                        identifier: num4 [473,477]
                                        <: < [478,479]
                                        identifier: num1 [480,484]
                                    &&: && [485,487]
                                    binary_expression [488,499]
                                        identifier: num4 [488,492]
                                        <: < [493,494]
                                        identifier: num2 [495,499]
                                &&: && [500,502]
                                binary_expression [503,514]
                                    identifier: num4 [503,507]
                                    <: < [508,509]
                                    identifier: num3 [510,514]
                            ): ) [514,515]
                        compound_statement [516,565]
                            {: { [516,517]
                            expression_statement [523,560]
                                call_expression [523,559]
                                    identifier: printf [523,529]
                                    argument_list [529,559]
                                        (: ( [529,530]
                                        string_literal [530,552]
                                            ": " [530,531]
                                            string_content: %d is the smallest [531,549]
                                            escape_sequence: \n [549,551]
                                            ": " [551,552]
                                        ,: , [552,553]
                                        identifier: num4 [554,558]
                                        ): ) [558,559]
                                ;: ; [559,560]
                            }: } [564,565]

