No.0 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof Class) {
            return (Class) actual;
        } else if (actual instanceof ParameterizedType) {
            return (Class) ((ParameterizedType) actual).getRawType();
        }
    }
    
    return Object.class;
}
No.4 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof ParameterizedType) {
            return (Class) ((ParameterizedType) actual).getRawType();
        } else {
            return (Class) actual;
        }
        //in case of nested generics we don't go deep
    }
    
    return Object.class;
}
No.7 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof ParameterizedType) {
            return (Class) ((ParameterizedType) actual).getRawType();
        } else {
            return (Class) actual;
        }
    }
    
    return Object.class;
}
No.8 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof ParameterizedType) {
            // Handling nested generics
            actual = ((ParameterizedType) actual).getRawType();
        }
        return (Class) actual;
    }
    
    return Object.class;
}
No.9 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof Class) {
            return (Class) actual;
        } else if (actual instanceof ParameterizedType) {
            // in case of nested generics we don't go deep
            actual = ((ParameterizedType) actual).getRawType();
            if (actual instanceof Class) {
                return (Class) actual;
            }
        }
    }
    
    return Object.class;
}
No.10 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof ParameterizedType) {
            actual = ((ParameterizedType) actual).getRawType();
        }
        return (Class) actual;
    }
    
    return Object.class;
}
No.12 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof Class) {
            return (Class) actual;
        } else if (actual instanceof ParameterizedType) {
            return (Class) ((ParameterizedType) actual).getRawType();
        }
    }
    
    return Object.class;
}
No.15 Patch
public Class<?> getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof Class) {
            return (Class<?>) actual;
        } else if (actual instanceof ParameterizedType) {
            return (Class<?>) ((ParameterizedType) actual).getRawType();
        }
    }
    
    return Object.class;
}
No.16 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof ParameterizedType) {
            actual = ((ParameterizedType) actual).getRawType();
        }
        return (Class) actual;
        //in case of nested generics we don't go deep
    }
    
    return Object.class;
}
No.23 Patch
public Class getGenericType(Field field) {        
    Type generic = field.getGenericType();
    if (generic != null && generic instanceof ParameterizedType) {
        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
        if (actual instanceof Class) {
            return (Class) actual;
        } else if (actual instanceof ParameterizedType) {
            return (Class)((ParameterizedType) actual).getRawType();
        }
    }
    
    return Object.class;
}
