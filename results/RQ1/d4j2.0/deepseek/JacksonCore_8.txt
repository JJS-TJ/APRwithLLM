No.14 Patch
public char[] getTextBuffer()
{
    // Are we just using shared input buffer?
    if (_inputStart >= 0) return _inputBuffer;
    if (_resultArray != null)  return _resultArray;
    if (_resultString != null) {
        return (_resultArray = _resultString.toCharArray());
    }
    // Nope; but does it fit in just one segment?
    if (!_hasSegments && _currentSegment != null) {
        return _currentSegment;
    }
    // Nope, need to have/create a non-segmented array and return it
    return contentsAsArray();
}
No.45 Patch
public char[] getTextBuffer()
{
    // Are we just using shared input buffer?
    if (_inputStart >= 0 && !_hasSegments && _resultArray == null && _resultString == null) {
        return _inputBuffer;
    }
    if (_resultArray != null)  return _resultArray;
    if (_resultString != null) {
        return (_resultArray = _resultString.toCharArray());
    }
    // Nope, need to have/create a non-segmented array and return it
    return contentsAsArray();
}
No.46 Patch
public char[] getTextBuffer()
{
    // Are we just using shared input buffer?
    if (_inputStart >= 0) return _inputBuffer;
    if (_resultArray != null)  return _resultArray;
    if (_resultString != null) {
        return (_resultArray = _resultString.toCharArray());
    }
    // Nope; but does it fit in just one segment?
    if (!_hasSegments) {
        if(_currentSegment != null)
            return _currentSegment;
        else
            return new char[0];
    }
    // Nope, need to have/create a non-segmented array and return it
    return contentsAsArray();
}
No.53 Patch
public char[] getTextBuffer()
{
    // Are we just using shared input buffer?
    if (_inputStart >= 0 && _inputBuffer != null) return _inputBuffer;
    if (_resultArray != null)  return _resultArray;
    if (_resultString != null) {
        return (_resultArray = _resultString.toCharArray());
    }
    // Nope; but does it fit in just one segment?
    if (!_hasSegments && _currentSegment != null) return _currentSegment;
    // Nope, need to have/create a non-segmented array and return it
    return contentsAsArray();
}
