No.62 Patch
const Token * Variable::declEndToken() const
{
    Token const * declEnd = typeStartToken();
    while (declEnd &&!Token::Match(declEnd, "[;,)={]")) {
        if (declEnd->link() && Token::Match(declEnd,"(|["))
            declEnd = declEnd->link();
        else if (declEnd->link())
            declEnd = declEnd->link()->next();
        declEnd = declEnd->next();
    }
    return declEnd;
}

/* Provide a fix for the buggy function */
No.68 Patch
const Token * Variable::declEndToken() const
{
    Token const * declEnd = typeStartToken();
    while (declEnd &&!Token::Match(declEnd, "[;,)={]")) {
        if (declEnd->link() && Token::Match(declEnd,"(|["))
            declEnd = declEnd->link();
        declEnd = declEnd->next();
        if (Token::Match(declEnd, ",")) {
            declEnd = declEnd->next();
            if (Token::Match(declEnd, "}"))
                break;
        }
    }
    return declEnd;
}

/* Provide a fix for the buggy function */
