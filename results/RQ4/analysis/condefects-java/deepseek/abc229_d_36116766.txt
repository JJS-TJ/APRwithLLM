No.2 Patch
public static void main(String[] args){
  Scanner scan = new Scanner(System.in);
  String s = scan.nextLine(); int cnt = scan.nextInt();
  int start = 0; int end = 0; int maxCnt = 0;
  
  while(end < s.length()){
  	if(s.charAt(end) == 'X'){
      	end++;
        maxCnt = Math.max(maxCnt, end - start);
    }
    else if(cnt > 0){
      end++;
      cnt--;
      maxCnt =  Math.max(maxCnt, end - start);
    }
    else{
    if(s.charAt(start) == 'X'){
    start++;
    }
      else{
      cnt++;
        start++;
      }
    }
  }
  System.out.println(maxCnt);
}<｜end▁of▁sentence｜><｜begin▁of▁sentence｜>// Given a string s consisting of some words separated by some number of spaces, return the length of the last word in the string.

// A word is a maximal substring consisting of non-space characters only.

// Example 1:

// Input: s = "Hello World"
// Output: 5
// Explanation: The last word is "World" with length 5.

// Example 2:

// Input: s = "   fly me   to   the moon  "
// Output: 4
// Explanation: The last word is "moon" with length 4.

// Example 3:

// Input: s = "luffy is still joyboy"
// Output: 6
// Explanation: The last word is "joyboy" with length 6.

// Constraints:

// 1 <= s.length <= 104
// s consists of only English letters and spaces ' '.
// There will be at least one word in s.

class Solution {
    public int lengthOf
