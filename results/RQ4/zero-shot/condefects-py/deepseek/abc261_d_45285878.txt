No.0 Patch
n,m = map(int, input().split())
xl = list(map(int, input().split()))
cyl = [list(map(int, input().split())) for _ in range(m)]
yl = [0] * n  
for c,y in cyl:
    yl[c-1] = y

dp = [[0] * (n+1) for i in range(n+1)]

for i in range(n):
    if i == 0:
        dp[i+1][1] = xl[0] + yl[0]
    else:
        for j in range(1,i+2):
            dp[i+1][j] = dp[i][j-1] + xl[i] + yl[j-1]
        dp[i+1][0] = max(dp[i])
print(max(dp[n]))<｜end▁of▁sentence｜><｜begin▁of▁sentence｜>
No.2 Patch
n,m = map(int, input().split())
xl = list(map(int, input().split()))
cyl = [list(map(int, input().split())) for _ in range(m)]
yl = [0] * n
for c,y in cyl:
    yl[c-1] = y

dp = [[0] * (n+1) for i in range(n+1)]

for i in range(n):
    for j in range(i+1):
        dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j] + xl[i] + yl[j])
        dp[i+1][0] = max(dp[i+1][0], dp[i][j])
print(max(dp[n]))<｜end▁of▁sentence｜><｜begin▁of▁sentence｜>
