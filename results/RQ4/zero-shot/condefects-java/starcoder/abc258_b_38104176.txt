No.5 Patch
static void solve () {
	
	int n = nextInt();
	char[][] a = new char[n*3][n*3];

	for (int i=0; i<n; i++) {
		String s = next();
		for (int j=0; j<n; j++) {
			a[i][j] = s.charAt(j);
			a[i][j+n] = a[i][j];
			a[i][j+n*2] = a[i][j];
			a[i+n][j] = a[i][j];
			a[i+n][j+n] = a[i][j];
			a[i+n][j+n*2] = a[i][j];
			a[i+n*2][j] = a[i][j];
			a[i+n*2][j+n] = a[i][j];
			a[i+n*2][j+n*2] = a[i][j];
		}
	}
	
	int[] sy = {-1, -1, -1, 0, 1, 1,  1,  0};
	int[] sx = {-1,  0,  1, 1, 1, 0, -1, -1};
	
	long max = 0;
	
	for (int i=n; i<2*n; i++) {
		for (int j=n; j<2*n; j++) {

			for (int k=0; k<8; k++) {
				
				Point p = new Point(i, j);
				long cur = 0;
				
				for (int l=0; l<n; l++) {
					p.y += sy[k];
					p.x += sx[k];
					cur = cur*10 + a[p.y][p.x] - '0';
				}
				
				max = Math.max(max, cur);
			}
			
		}
	}
	
	println(max);
	
}
No.7 Patch
static void solve () {
	
	int n = nextInt();
	char[][] a = new char[n*3][n*3];

	for (int i=0; i<n; i++) {
		String s = next();
		for (int j=0; j<n; j++) {
			a[i][j] = s.charAt(j);
			a[i][j+n] = a[i][j];
			a[i][j+n*2] = a[i][j];
			a[i+n][j] = a[i][j];
			a[i+n][j+n] = a[i][j];
			a[i+n][j+n*2] = a[i][j];
			a[i+n*2][j] = a[i][j];
			a[i+n*2][j+n] = a[i][j];
			a[i+n*2][j+n*2] = a[i][j];
		}
	}
	
	
	int[] sy = {-1, -1, -1, 0, 1, 1,  1,  0};
	int[] sx = {-1,  0,  1, 1, 1, 0, -1, -1};
	
	
	long max = Integer.MIN_VALUE;
	
	for (int i=n; i<2*n; i++) {
		for (int j=n; j<2*n; j++) {

			for (int k=0; k<8; k++) {
				
				Point p = new Point(i, j);
				long val = 0;
				
				for (int l=0; l<n; l++) {
					p.y += sy[k];
					p.x += sx[k];
					val = val * 10 + a[p.y][p.x] - '0';
				}
				max = Math.max(max, val);
			}
			
		}
	}
	
	println(max);
	
}
