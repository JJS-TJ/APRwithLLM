No.0 Patch
static long compute(long subRoot, long d) {
    if(d < 0) {
        return 0;
    }
    else if(d == 0) {
        return 1;
    }
    long level = getLevel(subRoot);
    if(maxLevel - level < d) {
        return 0;
    }
    long l = subRoot, r = subRoot;
    for(int i = 0; i < d; i++) {
        l *= 2;
        r = r * 2 + 1;
    }
    long result = min(n, r) - l + 1;
    if(result < 0) {
        result = 0;
    }
    return result;
}
