No.0 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 0; j.value < k.value; j.value++) {
            if (numbers[j.value] > numbers[j.value + 1]) {
                temp.value = numbers[j.value];
                numbers[j.value] = numbers[j.value + 1];
                numbers[j.value + 1] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.2 Patch
public void exec () throws Exception {
    IntObj i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        numbers[i.value] = scanner.nextInt ();
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.3 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt ();
    }
    for (int k = 3; k > 0; k--) {
        for (int j = 0; j < k; j++) {
            if (numbers[j] > numbers[j + 1]) {
                int temp = numbers[j];
                numbers[j] = numbers[j + 1];
                numbers[j + 1] = temp;
            }
        }
    }
    output += (String.format ("%d is the smallest\n", numbers[0]));
}
No.4 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.5 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt ();
    }
    for (int k = 4; k > 0; k--) {
        for (int j = 1; j < k; j++) {
            if (numbers[j - 1] > numbers[j]) {
                int temp = numbers[j - 1];
                numbers[j - 1] = numbers[j];
                numbers[j] = temp;
            }
        }
    }
    int smallest = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest));
    if (true)
        return;;
}
No.8 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output += (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt ();
    }
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3 - i; j++) {
            if (numbers[j] > numbers[j + 1]) {
                int temp = numbers[j];
                numbers[j] = numbers[j + 1];
                numbers[j + 1] = temp;
            }
        }
    }
    int smallest = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest));
    if (true)
        return;;
}
No.10 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value >= 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
}
No.11 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value >= 0; k.value--) {
        for (j.value = 0; j.value < k.value; j.value++) {
            if (numbers[j.value] > numbers[j.value + 1]) {
                temp.value = numbers[j.value];
                numbers[j.value] = numbers[j.value + 1];
                numbers[j.value + 1] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.12 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt();
    }
    for (int i = 0; i < 4; i++) {
        for (int j = i + 1; j < 4; j++) {
            if (numbers[i] > numbers[j]) {
                int temp = numbers[i];
                numbers[i] = numbers[j];
                numbers[j] = temp;
            }
        }
    }
    output += (String.format ("%d is the smallest\n", numbers[0]));
    if (true)
        return;;
}

// Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.
No.13 Patch
public void exec () throws Exception {
    IntObj i = new IntObj (), smallest = new IntObj (), j = new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output += (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        numbers[i.value] = scanner.nextInt ();
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 0; j.value < k.value; j.value++) {
            if (numbers[j.value] > numbers[j.value + 1]) {
                temp.value = numbers[j.value];
                numbers[j.value] = numbers[j.value + 1];
                numbers[j.value + 1] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
}
No.14 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output += (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt ();
    }
    for (int k = 0; k < 4; k++) {
        for (int j = k + 1; j < 4; j++) {
            if (numbers[k] > numbers[j]) {
                int temp = numbers[k];
                numbers[k] = numbers[j];
                numbers[j] = temp;
            }
        }
    }
    int smallest = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest));
    if (true)
        return;;
}
No.15 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}

// You are given a string and an integer. Write a program that will print the string for a number of times equal to the given integer.

// Given Input: "Hello", 3
// Expected Output: "HelloHelloHello"
No.16 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) { // Change from 3 to 4
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.17 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), i = new IntObj (), smallest = new IntObj (), j =
        new IntObj (), k = new IntObj (), temp = new IntObj ();
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) { // Change 3 to 4
        x.value = scanner.nextInt ();
        numbers[i.value] = x.value;
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 1; j.value <= k.value; j.value++) {
            if (numbers[j.value - 1] > numbers[j.value]) {
                temp.value = numbers[j.value - 1];
                numbers[j.value - 1] = numbers[j.value];
                numbers[j.value] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest.value));
    if (true)
        return;;
}
No.18 Patch
public void exec() throws Exception {
    IntObj i = new IntObj(), smallest = new IntObj(), j = new IntObj(), k = new IntObj(), temp = new IntObj();
    int[] numbers = new int[4];
    output += (String.format("Please enter 4 numbers separated by spaces > "));
    for (i.value = 0; i.value < 4; i.value++) {
        numbers[i.value] = scanner.nextInt();
    }
    for (k.value = 3; k.value > 0; k.value--) {
        for (j.value = 0; j.value < k.value; j.value++) {
            if (numbers[j.value] > numbers[j.value + 1]) {
                temp.value = numbers[j.value];
                numbers[j.value] = numbers[j.value + 1];
                numbers[j.value + 1] = temp.value;
            }
        }
    }
    smallest.value = numbers[0];
    output += (String.format("%d is the smallest\n", smallest.value));
    if (true)
        return;
    ;
}
No.19 Patch
public void exec () throws Exception {
    int[] numbers = new int[4];
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    for (int i = 0; i < 4; i++) {
        numbers[i] = scanner.nextInt ();
    }
    for (int i = 0; i < 4; i++) {
        for (int j = i + 1; j < 4; j++) {
            if (numbers[i] > numbers[j]) {
                int temp = numbers[i];
                numbers[i] = numbers[j];
                numbers[j] = temp;
            }
        }
    }
    int smallest = numbers[0];
    output += (String.format ("%d is the smallest\n", smallest));
}
