No.1 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), y = new IntObj (), z = new IntObj (), t =
        new IntObj (), a = new IntObj ();
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    x.value = scanner.nextInt ();
    y.value = scanner.nextInt ();
    z.value = scanner.nextInt ();
    t.value = scanner.nextInt ();
    if (x.value > y.value) {
        a.value = y.value;
    } else {
        a.value = x.value;
    }
    if (y.value > z.value) {
        if (a.value > z.value)
            a.value = z.value;
    } else {
        if (a.value > z.value)
            a.value = z.value;
    }
    if (z.value > t.value) {
        if (a.value > t.value)
            a.value = t.value;
    } else {
        if (a.value > t.value)
            a.value = t.value;
    }
    output += (String.format ("%d is the smallest\n", a.value));
    if (true)
        return;;
}
No.3 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), y = new IntObj (), z = new IntObj (), t =
        new IntObj (), a = new IntObj ();
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    x.value = scanner.nextInt ();
    y.value = scanner.nextInt ();
    z.value = scanner.nextInt ();
    t.value = scanner.nextInt ();
    if (x.value > y.value) {
        if (y.value > z.value) {
            a.value = z.value;
        } else {
            a.value = y.value;
        }
    } else {
        if (x.value > z.value) {
            a.value = z.value;
        } else {
            a.value = x.value;
        }
    }
    if (x.value > t.value) {
        a.value = t.value;
    }
    output += (String.format ("%d is the smallest\n", a.value));
    if (true)
        return;;
}
No.5 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), y = new IntObj (), z = new IntObj (), t =
        new IntObj (), a = new IntObj ();
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    x.value = scanner.nextInt ();
    y.value = scanner.nextInt ();
    z.value = scanner.nextInt ();
    t.value = scanner.nextInt ();
    if (x.value > y.value) {
        a.value = y.value;
    } else {
        a.value = x.value;
    }
    if (a.value > z.value) {
        a.value = z.value;
    }
    if (a.value > t.value) {
        a.value = t.value;
    }
    output += (String.format ("%d is the smallest\n", a.value));
    if (true)
        return;;
}
No.8 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), y = new IntObj (), z = new IntObj (), t =
        new IntObj (), a = new IntObj ();
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    x.value = scanner.nextInt ();
    y.value = scanner.nextInt ();
    z.value = scanner.nextInt ();
    t.value = scanner.nextInt ();
    if (x.value > y.value) {
        a.value = y.value;
    } else {
        a.value = x.value;
    }
    if (y.value > z.value) {
        if (a.value > z.value) {
            a.value = z.value;
        }
    } else {
        if (a.value > z.value) {
            a.value = z.value;
        }
    }
    if (z.value > t.value) {
        if (a.value > t.value) {
            a.value = t.value;
        }
    } else {
        if (a.value > t.value) {
            a.value = t.value;
        }
    }
    output += (String.format ("%d is the smallest\n", a.value));
    if (true)
        return;;
}
No.11 Patch
public void exec () throws Exception {
    IntObj x = new IntObj (), y = new IntObj (), z = new IntObj (), t =
        new IntObj (), a = new IntObj ();
    output +=
        (String.format ("Please enter 4 numbers separated by spaces > "));
    x.value = scanner.nextInt ();
    y.value = scanner.nextInt ();
    z.value = scanner.nextInt ();
    t.value = scanner.nextInt ();
    a.value = Math.min (x.value, y.value);
    if (a.value > z.value) {
        a.value = z.value;
    }
    if (a.value > t.value) {
        a.value = t.value;
    }
    output += (String.format ("%d is the smallest\n", a.value));
    if (true)
        return;;
}
