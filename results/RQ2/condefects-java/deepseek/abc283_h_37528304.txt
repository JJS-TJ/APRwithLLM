No.1 Patch
private void solve(final FastIO io, final String[] args) {
	io.setAutoFlush(false);
	io.setAutoOutFlush(false);
	/*
	 * author: 31536000
	 * AtCoder Beginner Contest 283 H問題
	 * 考察メモ
	 * popcountの総和、は桁ごとにばらして寄与は典型
	 * で、そうするとmod 2^Nだし等差数列だし01加算だしでどう見てもfloorsum
	 */
	int T = io.nextInt();
	while (T --> 0) {
		int N = io.nextInt(), M = io.nextInt(), R = io.nextInt();
		long ans = 0;
		for (int i = 1;i <= N;i <<= 1) ans += ACL.MathLib.floor_sum((N - R) / M + 1	, i << 1, M, R + i) - ACL.MathLib.floor_sum((N - R) / M + 1	, i << 1, M, R);
		io.println(ans);
	}
}
No.2 Patch
private void solve(final FastIO io, final String[] args) {
	io.setAutoFlush(false);
	io.setAutoOutFlush(false);
	/*
	 * author: 31536000
	 * AtCoder Beginner Contest 283 H問題
	 * 考察メモ
	 * popcountの総和、は桁ごとにばらして寄与は典型
	 * で、そうするとmod 2^Nだし等差数列だし01加算だしでどう見てもfloorsum
	 */
	int T = io.nextInt();
	while (T --> 0) {
		int N = io.nextInt(), M = io.nextInt(), R = io.nextInt();
		long ans = 0;
		for (int i = 1;i <= N;i <<= 1) ans += ACL.MathLib.floor_sum((N - R) / M + 1, i << 1, M, R + i) - ACL.MathLib.floor_sum((N - R) / M + 1, i << 1, M, R);
		io.println(ans);
	}
}
