No.0 Patch
static void solve(){//ここがメイン関数
	int N = nextInt();
	HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
	for(int i = 0; i < N; i++){
		int F = nextInt();
		int S = nextInt();
		if(!map.containsKey(F)){
			map.put(F, new ArrayList<Integer>());
		}
		map.get(F).add(S);
	}
	int output = 0;
	ArrayList<Integer> maxes = new ArrayList<>();
	for(int key : map.keySet()){
		ArrayList<Integer> list = map.get(key);
		Collections.sort(list, Comparator.reverseOrder());
		maxes.add(list.get(0));
		if(list.size() > 1){
			output = Math.max(output, list.get(0) + (list.get(1) / 2));
		}
	}
	Collections.sort(maxes, Comparator.reverseOrder());
	if(maxes.size() > 1){
		output = Math.max(output, maxes.get(0) + maxes.get(1));
	}
	myout(output);
}
