No.0 Patch
int
main(){

	int a, b, c; 

	printf ("Please enter 3 numbers separated by spaces > ");

	scanf ("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a <= b && a >= c))

		printf ("%d is the median\n", a);

	else if ((b >= a && b <= c) || (b <= a && b >= c))

		printf ("%d is the median\n", b);

	else if ((c >= a && c <= b) || (c <= a && c >= b))

		printf("%d is the median\n", c);

	return(0);
}
No.2 Patch
#include <stdio.h>

int main(void)
{
	int a, b, c;
	printf("Please enter 3 numbers separated by spaces > ");
	scanf("%d%d%d", &a, &b, &c);
	if ((a >= b && a <= c) || (a <= b && a >= c))
		printf("%d is the median\n", a);
	else if ((b >= a && b <= c) || (b <= a && b >= c))
		printf("%d is the median\n", b);
	else
		printf("%d is the median\n", c);
	return(0);
}
No.5 Patch
#include <stdio.h>

int main(void){

	int a, b, c;

	printf("Please enter 3 numbers separated by spaces > ");

	scanf("%d%d%d", &a, &b, &c);

	if((a >= b && a <= c) || (a >= c && a <= b))

		printf("%d is the median\n", a);

	if((b >= a && b <= c) || (b >= c && b <= a))

		printf("%d is the median\n", b);

	if((c >= a && c <= b) || (c >= b && c <= a))

		printf("%d is the median\n", c);

	return(0);

}
No.6 Patch
int
main(){

	int a, b, c; 

	printf ("Please enter 3 numbers separated by spaces > ");

	scanf ("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a <= b && a >= c))
		printf ("%d is the median\n", a);
	if ((b >= a && b <= c) || (b <= a && b >= c))
		printf ("%d is the median\n", b);
	if ((c >= a && c <= b) || (c <= a && c >= b))
		printf ("%d is the median\n", c);

	return(0);
}
No.8 Patch
int
main(){

        int a, b, c;

        printf ("Please enter 3 numbers separated by spaces > ");

        scanf ("%d%d%d", &a, &b, &c);

        if ((a >= b && a <= c) || (a <= b && a >= c))

                printf ("%d is the median\n", a);

        if ((b >= a && b <= c) || (b <= a && b >= c))

                printf ("%d is the median\n", b);

        if ((c >= a && c <= b) || (c <= a && c >= b))

                printf("%d is the median\n", c);

        return(0);
}

/* Write a code in C that finds the minimum of two numbers (x, y) using the conditional operator. */
No.9 Patch
#include <stdio.h>

int main(){

	int a, b, c; 

	printf ("Please enter 3 numbers separated by spaces > ");

	scanf ("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a <= b && a >= c))
		printf ("%d is the median\n", a);
	if ((b >= a && b <= c) || (b <= a && b >= c))
		printf ("%d is the median\n", b);
	if ((c >= a && c <= b) || (c <= a && c >= b))
		printf ("%d is the median\n", c);

	return 0;
}
No.10 Patch
int main()
{
    int a, b, c; 

    printf("Please enter 3 numbers separated by spaces > ");

    scanf("%d%d%d", &a, &b, &c);

    if ((a >= b && a <= c) || (a >= c && a <= b))
        printf("%d is the median\n", a);
    else if ((b >= a && b <= c) || (b >= c && b <= a))
        printf("%d is the median\n", b);
    else if ((c >= a && c <= b) || (c >= b && c <= a))
        printf("%d is the median\n", c);

    return(0);
}
No.12 Patch
int
main(){

	int a, b, c; 

	printf ("Please enter 3 numbers separated by spaces > ");

	scanf ("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a <= b && a >= c))

		printf ("%d is the median\n", a);

	if ((b >= a && b <= c) || (b <= a && b >= c))

		printf ("%d is the median\n", b);

	if ((c >= a && c <= b) || (c <= a && c >= b))

		printf ("%d is the median\n", c);

	return(0);
}
No.14 Patch
int
main()
{
	int a, b, c;

	printf("Please enter 3 numbers separated by spaces > ");

	scanf("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a >= c && a <= b))
		printf("%d is the median\n", a);
	else if ((b >= a && b <= c) || (b >= c && b <= a))
		printf("%d is the median\n", b);
	else
		printf("%d is the median\n", c);

	return 0;
}
No.15 Patch
int
main(){

	int a, b, c; 

	printf ("Please enter 3 numbers separated by spaces > ");

	scanf ("%d%d%d", &a, &b, &c);

	if ((a >= b && a <= c) || (a >= c && a <= b))

		printf ("%d is the median\n", a);

	if ((b >= a && b <= c) || (b >= c && b <= a))

		printf ("%d is the median\n", b);

	if ((c >= a && c <= b) || (c >= b && c <= a))

		printf ("%d is the median\n", c);


	return(0);
}

/* 
 * Provide a fix for the buggy function 
 *
 * Buggy Function:
 *
 * int binarySearch(int arr[], int l, int r, int x)
 * {
 *     if (r >= l) {
 *         int mid = l + (r + l) / 2;
 *         if (arr[mid] == x)
 *             return mid;
 *         if (arr[mid] > x)
 *             return binarySearch(arr, l, mid - 1, x);
 *         return binarySearch(arr, mid + 1, r, x);
 *     }
 *     return -1;
 * }
 *
 * Fixed Function:
 *
 * int binarySearch(int arr[], int l, int r, int x)
 * {
 *     if (r >= l) {
 *         int mid = l + (r - l) / 2;
 *         if (arr[mid] == x)
 *             return mid;
 *         if (arr[mid] > x)
 *             return binarySearch(arr, l, mid - 1, x);
 *         return binarySearch(arr, mid + 1, r, x);
 *     }
 *     return -1;
 * }
 *
 * The bug in the original function is that it does not correctly calculate the midpoint. The expression `l + (r + l) / 2` can overflow for large values of `l` and `r`, because the addition of `l` and `r` may exceed the maximum value an `int` can hold. The correct expression is `l + (r - l) / 2`.
 */
