No.0 Patch
int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	fgets(string, 100000, stdin);
	string[strlen(string)-1] = '\0';
	
	stringlength=strlen(string);
	
	checksum_summation=0;

	for(i=0; i < stringlength; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}
No.2 Patch
int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	scanf("%99999[^\n]", string);
	
	stringlength=strlen(string);
	
	checksum_summation=0;

	for(i=0; i < stringlength; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}
No.7 Patch
int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	fgets(string, sizeof(string), stdin);
	
	stringlength=strlen(string);
	
	checksum_summation=0;

	for(i=0; i < stringlength - 1; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}
No.9 Patch
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	scanf("%[^\n]%*c", string);

	stringlength=strlen(string);

	checksum_summation=0;

	for(i=0; i < stringlength; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}
No.11 Patch
int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	fgets(string, 100000, stdin); // Change scanf to fgets to read entire line.
	
	stringlength=strlen(string);
	string[stringlength-1] = '\0'; // Remove the newline character from the end.
	
	checksum_summation=0;

	for(i=0; i < stringlength; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}
No.12 Patch
int main(void)
{
	char string[100000];
	char checksumchar;
	int i, stringlength, checksum_summation;

	printf("Enter an abitrarily long string, ending with carriage return > ");
	scanf("%[^\n]s", string);
	
	stringlength=strlen(string);
	
	checksum_summation=0;

	for(i=0; i < stringlength; i++)
		{
		checksum_summation+=(int)string[i];
		}
	checksum_summation %= 64;
	checksum_summation += 32;
	checksumchar = (char)checksum_summation;
	printf("Check sum is %c\n",checksumchar);

	return 0;
}

/* The problem of the original code is that it only scans up to the first white space. 
By changing %s to %[^\n], it allows the program to read the whole line. */
