No.0 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else if (g<d){
		printf("Student has failed the course\n");
	}
	return (0);
}
No.3 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else if (g<d){
		printf("Student has failed the course\n");
	}
	return (0);
}

/* Implement a function to check if a given string is a palindrome. A string is a palindrome if it can be read the same way in both directions. */
No.4 Patch
#include <stdio.h>

int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else if (g<d){
		printf("Student has failed the course\n");
	}
	return (0);
}
No.8 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else if (g<d){
		printf("Student has failed the course\n");
	}
	return (0);
}


/* Fix the bug in the following program */
No.9 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else {
		printf("Student has failed the course\n");
	}
	return (0);
}
No.10 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else {
		printf("Student has failed the course\n");
	}
	return (0);
}



/* Fix the Bug(s) */
No.16 Patch
int main(){
	float a,b,c,d,g;
	printf("Enter thresholds for A, B, C, D\nin that order, decreasing percentages > ");
	scanf("%f%f%f%f",&a,&b,&c,&d);
	printf("Thank you. Now enter student score (percent) >");
	scanf("%f",&g);
	if (g>=a){
		printf("Student has an A grade\n");
	}
	else if(g>=b && g<a){
		printf("Student has an B grade\n");
	}
	else if(g>=c && g<b){
		printf("Student has an C grade\n");
	}
	else if(g>=d && g<c){
		printf("Student has an D grade\n");
	}
	else if (g<d){
		printf("Student has failed the course\n");
	}
	return (0);
}

/* Implement a binary search */

/* Binary Search Function */
int binarySearch(int arr[], int l, int r, int x)
{
    if (r >= l) {
        int mid = l + (r - l) / 2;
        if (arr[mid] == x)
            return mid;
        if (arr[mid] > x)
            return binarySearch(arr, l, mid - 1, x);
        return binarySearch(arr, mid + 1, r, x);
    }
    return -1;
}
