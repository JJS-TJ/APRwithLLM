No.0 Patch
N, K = map(int, input().split())
S = input()
cnt = 0
s = ""
for i in S:
    if i == "o" and cnt < K:
        cnt += 1
        s = s + i
    elif i == "o":
        s = s + "x"
    if i == "x":
        s = s + "x"
print(s)
No.2 Patch
#F
N, K = map(int, input().split())
S = input()
cnt = 0
s = ""
for i in S:
    if i == "o" and cnt < K:
        cnt += 1
        s = s + i
    elif i == "o":
        s = s + "x"
    if i == "x":
        s = s + "x"
print(s)
No.3 Patch
N, K = map(int, input().split())
S = input()
cnt = 0
s = ""
for i in S:
    if i == "o" and cnt < K:
        cnt += 1
        s = s + i
    elif i == "o":
        s = s + "x"
    if i == "x":
        s = s + "x"
print(s)

# Given a list of integers, write a program to find the sum of the numbers in the list.
No.5 Patch
# F
N, K = map(int, input().split())
S = input()
cnt = 0
s = ""
for i in S:
    if i == "o" and cnt < K:
        cnt += 1
        s = s + i
    elif i == "o":
        s = s + "x"
    if i == "x":
        s = s + "x"
print(s)
No.6 Patch
N, K = map(int, input().split())
S = input()
cnt = 0
s = ""
for i in S:
    if i == "o" and cnt < K:
        cnt += 1
        s = s + i
    elif i == "o":
        s = s + "x"
    if i == "x":
        s = s + "x"
print(s)

# Buggy function
def longest_common_prefix(strs):
    if len(strs) == 0:
        return ""
    current = strs[0]
    for i in range(1,len(strs)):
        temp = ""
        if len(current) == 0:
            break
        for j in range(len(strs[i])):
            if j<len(current) and current[j] == strs[i][j]:
                temp+=current[j]
            else:
                break
        current = temp
    return current
